{"version":3,"sources":["Components/Navbar.js","Components/PersonViewer.js","Components/Pagination.js","Components/People.js","Components/Planets.js","App.js","index.js"],"names":["Navbar","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","PersonViewer","person","name","gender","toUpperCase","height","mass","skin_color","style","eye_color","Pagination","pages","index","page","setpage","latestData","count","seq","Math","ceil","console","log","onClick","old","max","disabled","map","item","key","next","fetchPeople","pageNumber","a","fetch","res","json","loadingCss","css","People","useState","usePaginatedQuery","resolvedData","status","loading","size","color","results","url","fetchPlanet","greet","Planets","useQuery","data","planet","App","exact","path","component","eaxct","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef3a0f34.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from \"react-router-dom\"\r\n\r\nfunction Navbar() {\r\n    return (\r\n        \r\n<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n<div className=\"container\">\r\n  <span className=\"navbar-brand\" href=\"#\">Starwars</span>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n    <div className=\"navbar-nav ml-auto\">\r\n      <Link className=\"nav-item nav-link\" to=\"/people\">People</Link>\r\n      <Link className=\"nav-item nav-link\" to=\"/planets\">Planets</Link>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</nav>\r\n            \r\n        \r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\n\r\nfunction PersonViewer({person}) {\r\n    \r\n    return (\r\n        \r\n          <div className=\"col-md-4 col-lg-4 col-sm-6 col-xs-12 mb-5\" >\r\n          <div className=\"card bg-secondary text-white\">\r\n          <div className=\"card-header bg-dark\">\r\n            <h2>{person.name}</h2>\r\n          </div>\r\n          <p className=\"card-text text-center\">Gender:-{person.gender.toUpperCase()}</p>\r\n          <p className=\"card-text text-center\">Height:-{person.height}cms</p>\r\n          <p className=\"card-text text-center\">Weight:-{person.mass}kg</p>\r\n          <p className=\"card-text text-center\">Skin Color:-{person.skin_color.toUpperCase()}</p>\r\n          <h4 className=\"card-text text-center\" style={{\"color\":person.eye_color,\"textShadow\":\"2px 2px 2px white\"}}><b>Skin Color:-{person.eye_color.toUpperCase()}</b></h4>\r\n        </div>\r\n        </div>\r\n         \r\n    )\r\n}\r\n\r\nexport default PersonViewer\r\n","import React from 'react'\r\n\r\n\r\nfunction Pagination({page,setpage,latestData,count}) {\r\n \r\n  \r\n    let pages,index,seq=[]; \r\n    pages=Math.ceil(count/10);\r\n\r\n    for(index = 0; index < pages; index++) {\r\n      seq=[...seq,index+1]\r\n    }\r\n   console.log(seq)\r\n\r\n    return (\r\n        <nav aria-label=\"Page navigation example\">\r\n  <ul className=\"pagination\">\r\n    <li className=\"page-item\"><button className=\"page-link\" onClick={()=>setpage(old=>Math.max(old-1,1))} disabled={page===1}>Previous</button></li>\r\n   {\r\n    seq.map(item=>(\r\n      <li key={item} className=\"page-item\"><button className=\"page-link\" onClick={()=>setpage(item)}>{item}</button></li>\r\n    ))\r\n    \r\n   }\r\n    <li className=\"page-item\"><button className=\"page-link\" onClick={()=>setpage(old=>(!latestData||!latestData.next?old:old+1))}>Next</button></li>\r\n  </ul>\r\n</nav>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","import React,{useState } from 'react'\r\nimport {usePaginatedQuery} from \"react-query\"\r\nimport {BounceLoader} from \"react-spinners\"\r\nimport {css} from \"@emotion/core\"\r\nimport PersonViewer from './PersonViewer'\r\nimport Page from \"./Pagination\"\r\nconst fetchPeople=async(key,pageNumber)=>{\r\n    \r\n    const res=await fetch(`https://swapi.dev/api/people/?page=${pageNumber}`)\r\n    return res.json();\r\n}\r\n\r\nconst loadingCss=css `margin:auto; `\r\n  \r\n\r\nfunction People() {\r\nconst [page, setpage] = useState(1)\r\nconst {resolvedData,latestData,status}=usePaginatedQuery([\"people\",page],fetchPeople)\r\n\r\nconsole.log(resolvedData)\r\n    return (\r\n        <div>\r\n        <h3 className=\"display-3 text-center\">People</h3>\r\n         {status===\"error\" &&(<div>Error Loading Data</div>)}\r\n         {status===\"loading\" &&(<BounceLoader css={loadingCss} loading size={130} color=\"teal\"/>)}\r\n         {status===\"success\" &&(<div>\r\n            <Page setpage={setpage} count={resolvedData.count} page={page} latestData={latestData}/>\r\n\r\n            <div className=\"row\">\r\n            {\r\n               resolvedData.results.map(person=>(\r\n                  <PersonViewer key={person.url} person={person}/>\r\n               )\r\n               )}\r\n            </div>\r\n            \r\n        </div>\r\n       ) }\r\n        \r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default People\r\n","import React from 'react'\r\nimport {useQuery} from \"react-query\"\r\nimport {BounceLoader} from \"react-spinners\"\r\nimport {css} from \"@emotion/core\"\r\nimport PlanetViewer from './PersonViewer'\r\n\r\nconst fetchPlanet=async(key,greet,pageNumber)=>{\r\n    const res=await fetch(`https://swapi.dev/api/planets/?page=${pageNumber}`)\r\n    return res.json();\r\n}\r\n\r\nconst loadingCss=css `margin:auto; `\r\n\r\n\r\nfunction Planets() {\r\nconst {data,status}=useQuery([\"planets\",\"Hello World\",2],fetchPlanet)\r\n\r\nconsole.log(data);\r\n    return (\r\n        <div>\r\n        <h3 className=\"display-3 text-center\">Planets</h3>\r\n         {status===\"error\" &&(<div>Error Loading Data</div>)}\r\n         {status===\"loading\" &&(<BounceLoader css={loadingCss} loading size={130} color=\"teal\"/>)}\r\n         {status===\"success\" &&(\r\n            <div className=\"row\">\r\n            {\r\n               data.results.map(planet=>(\r\n                   <PlanetViewer key={planet.url} planet={planet}/>\r\n               )) \r\n               \r\n            }\r\n            </div>\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Planets\r\n","import React from 'react';\nimport \"./Helper.css\"\nimport Navbar from \"./Components/Navbar\"\nimport People from \"./Components/People\"\nimport Planets from \"./Components/Planets\"\nimport {BrowserRouter as Router, Switch,Route} from \"react-router-dom\"\n\n\nfunction App() {\n  return (\n    \n    <Router>\n    <Navbar/>\n      <h1 className=\"display-1 text-center\">StarWars</h1>\n      <hr/>\n      <div className=\"container\">\n      <Switch>\n        <Route exact path=\"/people\" component={People}/>\n        <Route eaxct path=\"/planets\" component={Planets}/>\n      </Switch>\n      </div>\n    </Router>\n  \n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.css\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}